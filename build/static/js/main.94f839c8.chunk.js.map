{"version":3,"sources":["utils/constants.ts","theme/theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["history","createBrowserHistory","defaultTheme","borderRadius","palette","common","black","white","primary","main","contrastText","secondary","btnPadding","default","small","medium","large","custom","defaultBg","defaultColor","Private","lazy","Public","App","theme","fallback","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qGAAA,YAEMA,EAAUC,cACDD,O,8ICAFE,EAA6B,CACxCC,aAAc,MACdC,QAAS,CACPC,OAAQ,CACNC,MAAO,UACPC,MAAO,WAETC,QAAS,CACPC,KAAM,UACNC,aAAc,WAEhBC,UAAW,CACTF,KAAM,UACNC,aAAc,YAGlBE,WAAY,CACVC,QAAS,WACTC,MAAO,OACPC,OAAQ,OACRC,MAAO,OACPC,OAAQ,aAEVC,UAAU,OACVC,aAAa,Q,uBClBTC,EAAUC,gBAAK,kBAAM,gCACrBC,EAASD,gBAAK,kBAAM,sDAiBXE,MAff,WACE,OACE,cAAC,IAAD,CAAeC,MAAOtB,EAAtB,SACE,cAAC,IAAD,CAAQF,QAASA,IAAjB,SACE,cAAC,WAAD,CAAUyB,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWR,IACtC,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,UAAWN,cCL9BO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.94f839c8.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\nexport default history;","// theme.ts\r\nimport { DefaultTheme } from \"styled-components\";\r\n\r\nexport const defaultTheme: DefaultTheme = {\r\n  borderRadius: \"4px\",\r\n  palette: {\r\n    common: {\r\n      black: \"#222831\",\r\n      white: \"#ffffff\",\r\n    },\r\n    primary: {\r\n      main: \"#726a95\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n    secondary: {\r\n      main: \"#709fb0\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n  },\r\n  btnPadding: {\r\n    default: \"8px 20px\",\r\n    small: \"10px\",\r\n    medium: \"20px\",\r\n    large: \"40px\",\r\n    custom: \"10px 20px\",\r\n  },\r\n  defaultBg:\"#000\",\r\n  defaultColor:\"#fff\",\r\n};\r\n","import React, { Suspense, lazy } from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { defaultTheme } from \"./theme/theme\";\nimport history from \"./utils/constants\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nconst Private = lazy(() => import(\"./routeModule/private\"));\nconst Public = lazy(() => import(\"./routeModule/public\"));\n\nfunction App() {\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Router history={history}>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route exact path=\"/app/*\" component={Private} />\n            <Route exact path=\"/\" component={Public} />\n          </Switch>\n        </Suspense>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}